-- beat
d1 $ sound "[<808bd:4(3,8) 808bd:4(5,8) 808bd:4(3,8) 808bd:4>, ~ 808:3]" # room 0.95 # krush 9 # speed (slow 4 ("<1.5 1>"))

-- hydra noise value
-- ccn is the cc number, the "connector" we will send things out through
-- it's multiplied by 4 here to give enough divisions to the pattern for the ccv pattern
-- ccv is the actual values we're sending, they need to be between 0 and 127 inclusive
d2 $ ccn "0*4" # ccv "0 20 64 127" # s "midi"

-- ccn is multiplied by 128 here to give enough divisions to the pattern
-- to get get a smooth saw wave for the ccv
d2 $ ccn "0*128" # ccv (slow 1 (range 127 0 saw)) # s "midi"

-- adjust every cycle with saw wave with every 4 cycles double speed
d2 $ rotL 1 $ every 4 (# ccv (fast 2 (range 127 0 saw))) $ ccn "0*128" # ccv (slow 1 (range 127 0 saw)) # s "midi"

-- apply our original rhythm to a saw wave value
d2 $ ccn "0*128"+"<t(3,8) t(5,8) t(3,8) t*2>" # ccv (slow 2 (range 127 0 saw)) # s "midi"
-- contrast that with just making a euclidean rhythm be all the way on or off
d2 $ ccv (stitch "<t(3,8) t(5,8) t(3,8) [t f@3]>" 127 0) # ccn 0 # s "midi"

-- combine the two with two different outs and then add together in hydra
-- this one sends too cc number 2
d2 $ rotL 1 $ every 4 (# ccv (fast 2 (range 127 0 saw))) $ ccn "0*128" # ccv (slow 1 (range 127 0 saw)) # s "midi"
d3 $ ccn "2*128"+"<t(3,8) t(5,8) t(3,8) t>"  # ccv (slow 4 (range 63 0 saw)) # s "midi"

-- reset noise
d2 $ ccn "0*128" # ccv 0 # s "midi"
d3 $ ccn "2*128" # ccv 0 # s "midi"

-- hydra luma value (control something else)
d4 $ ccn "1*128" # ccv (range 127 0 $ slow 4 saw) # s "midi"
-- reset luma
d4 $ ccn "1*128" # ccv 64 # s "midi"


hush
d1 silence
d2 silence
d3 silence
d4 silence
